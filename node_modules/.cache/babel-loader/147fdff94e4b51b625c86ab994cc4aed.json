{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feli_\\\\OneDrive\\\\Escritorio\\\\React Course\\\\13-Better Food App\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Checkout.module.css\";\nimport Modal from \"../UI/Modal\";\nimport useInput from \"../../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isNotEmpty = value => value.trim() !== \"\";\n\nconst Checkout = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameHasError,\n    reset: resetNameInput,\n    valueIsValid: nameIsValid,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredAddress,\n    hasError: addressHasError,\n    reset: resetAddressInput,\n    valueIsValid: addressIsValid,\n    valueChangeHandler: addressChangeHandler,\n    inputBlurHandler: addressBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredCity,\n    hasError: cityHasError,\n    reset: resetCityInput,\n    valueIsValid: cityIsValid,\n    valueChangeHandler: cityChangeHandler,\n    inputBlurHandler: cityBlurHandler\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredZip,\n    hasError: zipHasError,\n    reset: resetZipInput,\n    valueIsValid: zipIsValid,\n    valueChangeHandler: zipChangeHandler,\n    inputBlurHandler: zipBlurHandler\n  } = useInput(isNotEmpty);\n\n  const orderConfirmedHandler = () => {\n    props.onClose();\n\n    /*#__PURE__*/\n    _jsxDEV(Modal, {\n      onClose: props.onClose,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thank you for your order! Your order will be arriving in 30 minutes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  };\n\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    props.onClose();\n\n    /*#__PURE__*/\n    _jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Thank you for your order! Your order will be arriving in 30 minutes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this); // if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n    //   return;\n    // }\n    // console.log(enteredFirstName, enteredLastName, enteredEmail);\n    // resetFirstNameInput();\n    // resetLastNameInput();\n    // resetEmailInput();\n\n\n    if (!nameIsValid || !addressIsValid || !zipIsValid || !cityIsValid) {\n      return;\n    }\n\n    resetAddressInput();\n    resetZipInput();\n    resetCityInput();\n    resetNameInput();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangeHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        onChange: addressChangeHandler,\n        onBlur: addressBlurHandler,\n        value: enteredAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), addressHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Address is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        onChange: cityChangeHandler,\n        onBlur: cityBlurHandler,\n        value: enteredCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), cityHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"City is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"zip\",\n        children: \"ZIP Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"zip\",\n        onChange: zipChangeHandler,\n        onBlur: zipBlurHandler,\n        value: enteredZip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), zipHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"ZIP Code is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"w+ckGrDmGbw/N6nvz/Y1U+q7jcU=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/feli_/OneDrive/Escritorio/React Course/13-Better Food App/src/components/Cart/Checkout.js"],"names":["classes","Modal","useInput","isNotEmpty","value","trim","Checkout","props","enteredName","hasError","nameHasError","reset","resetNameInput","valueIsValid","nameIsValid","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","enteredAddress","addressHasError","resetAddressInput","addressIsValid","addressChangeHandler","addressBlurHandler","enteredCity","cityHasError","resetCityInput","cityIsValid","cityChangeHandler","cityBlurHandler","enteredZip","zipHasError","resetZipInput","zipIsValid","zipChangeHandler","zipBlurHandler","orderConfirmedHandler","onClose","formSubmitHandler","event","preventDefault","control"],"mappings":"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","sourcesContent":["import classes from \"./Checkout.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport useInput from \"../../hooks/use-input\";\r\n\r\nconst isNotEmpty = (value) => value.trim() !== \"\";\r\nconst Checkout = (props) => {\r\n  const {\r\n    value: enteredName,\r\n    hasError: nameHasError,\r\n    reset: resetNameInput,\r\n    valueIsValid: nameIsValid,\r\n    valueChangeHandler: nameChangeHandler,\r\n    inputBlurHandler: nameBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n  const {\r\n    value: enteredAddress,\r\n    hasError: addressHasError,\r\n    reset: resetAddressInput,\r\n    valueIsValid: addressIsValid,\r\n    valueChangeHandler: addressChangeHandler,\r\n    inputBlurHandler: addressBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n  const {\r\n    value: enteredCity,\r\n    hasError: cityHasError,\r\n    reset: resetCityInput,\r\n    valueIsValid: cityIsValid,\r\n    valueChangeHandler: cityChangeHandler,\r\n    inputBlurHandler: cityBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n  const {\r\n    value: enteredZip,\r\n    hasError: zipHasError,\r\n    reset: resetZipInput,\r\n    valueIsValid: zipIsValid,\r\n    valueChangeHandler: zipChangeHandler,\r\n    inputBlurHandler: zipBlurHandler,\r\n  } = useInput(isNotEmpty);\r\n\r\n  const orderConfirmedHandler = () => {\r\n    props.onClose();\r\n    <Modal onClose={props.onClose}>\r\n      <section>\r\n        <p>\r\n          Thank you for your order! Your order will be arriving in 30 minutes.\r\n        </p>\r\n      </section>\r\n    </Modal>;\r\n  };\r\n\r\n  const formSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    props.onClose();\r\n    <Modal>\r\n      <section>\r\n        <p>\r\n          Thank you for your order! Your order will be arriving in 30 minutes.\r\n        </p>\r\n      </section>\r\n    </Modal>;\r\n    // if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\r\n    //   return;\r\n    // }\r\n    // console.log(enteredFirstName, enteredLastName, enteredEmail);\r\n    // resetFirstNameInput();\r\n    // resetLastNameInput();\r\n    // resetEmailInput();\r\n    if (!nameIsValid || !addressIsValid || !zipIsValid || !cityIsValid) {\r\n      return;\r\n    }\r\n    resetAddressInput();\r\n    resetZipInput();\r\n    resetCityInput();\r\n    resetNameInput();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formSubmitHandler}>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"name\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          onChange={nameChangeHandler}\r\n          onBlur={nameBlurHandler}\r\n          value={enteredName}\r\n        ></input>\r\n        {nameHasError && <p className=\"error-text\">Name is empty.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"address\"\r\n          onChange={addressChangeHandler}\r\n          onBlur={addressBlurHandler}\r\n          value={enteredAddress}\r\n        ></input>\r\n        {addressHasError && <p className=\"error-text\">Address is empty.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"city\"\r\n          onChange={cityChangeHandler}\r\n          onBlur={cityBlurHandler}\r\n          value={enteredCity}\r\n        ></input>\r\n        {cityHasError && <p className=\"error-text\">City is empty.</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"zip\">ZIP Code</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"zip\"\r\n          onChange={zipChangeHandler}\r\n          onBlur={zipBlurHandler}\r\n          value={enteredZip}\r\n        ></input>\r\n        {zipHasError && <p className=\"error-text\">ZIP Code is empty.</p>}\r\n      </div>\r\n      <button onClick={props.onClose}>Cancel</button>\r\n      <button>Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}