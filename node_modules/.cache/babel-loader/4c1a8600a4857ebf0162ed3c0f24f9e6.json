{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feli_\\\\OneDrive\\\\Escritorio\\\\React Course\\\\13-Better Food App\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest: sendTaskRequest\n  } = useHttp();\n\n  const createOrder = (taskText, orderData) => {\n    const generatedId = orderData.name; // firebase-specific => \"name\" contains generated id\n\n    const createdOrder = {\n      id: generatedId,\n      name: orderData.name,\n      address: orderData.address,\n      city: orderData.city,\n      zip: orderData.zip,\n      //items: orderData.orderItems,\n      totalAmount: totalAmount\n    };\n    props.onAddTask(createdOrder);\n  };\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const [orderConfirmed, setConfirmedOrder] = useState(false);\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem(item);\n  };\n\n  const openCheckoutHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const closeCheckoutHandler = () => {\n    setIsCheckout(false);\n  };\n\n  const confirmedOrderHandler = (orderName, orderAddress, orderCity, orderZip) => {\n    const orderData = {\n      name: orderName,\n      address: orderAddress,\n      city: orderCity,\n      zip: orderZip,\n      //items: orderItems,\n      totalAmount: totalAmount\n    };\n    sendTaskRequest({\n      url: \"https://reacthttp-21417-default-rtdb.firebaseio.com/orders.json\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        orderData\n      }\n    }, createOrder.bind(null, orderData));\n    setConfirmedOrder(true);\n  };\n\n  let itemArray = cartCtx.items.map(item => [item.name, item.amount]);\n  let itemList = {};\n\n  for (var i = 0; i < itemArray.length; ++i) {\n    let itemName = itemArray[i][0];\n    let itemAmount = itemArray[i][1];\n    let item = itemName + \"x\" + itemAmount;\n    console.log(item);\n    itemList = Object.assign(itemList, item);\n  }\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes[\"button--alt\"],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: openCheckoutHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [orderConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for your order!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes[\"button--alt\"],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), !orderConfirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Total Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: totalAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n        onConfirm: confirmedOrderHandler,\n        onCancel: closeCheckoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), !isCheckout && modalActions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"hkBX8hinO9HeiXGOcL4/nWei9BQ=\", false, function () {\n  return [useHttp];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/feli_/OneDrive/Escritorio/React Course/13-Better Food App/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","useHttp","Cart","props","isLoading","error","sendRequest","sendTaskRequest","createOrder","taskText","orderData","generatedId","name","createdOrder","id","address","city","zip","totalAmount","onAddTask","cartCtx","isCheckout","setIsCheckout","toFixed","hasItems","items","length","orderConfirmed","setConfirmedOrder","cartItemRemoveHandler","removeItem","cartItemAddHandler","item","addItem","openCheckoutHandler","closeCheckoutHandler","confirmedOrderHandler","orderName","orderAddress","orderCity","orderZip","url","method","headers","body","bind","itemArray","map","amount","itemList","i","itemName","itemAmount","console","log","Object","assign","cartItems","price","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst Cart = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createOrder = (taskText, orderData) => {\n    const generatedId = orderData.name; // firebase-specific => \"name\" contains generated id\n    const createdOrder = {\n      id: generatedId,\n      name: orderData.name,\n      address: orderData.address,\n      city: orderData.city,\n      zip: orderData.zip,\n      //items: orderData.orderItems,\n      totalAmount: totalAmount,\n    };\n    props.onAddTask(createdOrder);\n  };\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const [orderConfirmed, setConfirmedOrder] = useState(false);\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n  const openCheckoutHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const closeCheckoutHandler = () => {\n    setIsCheckout(false);\n  };\n\n  const confirmedOrderHandler = (\n    orderName,\n    orderAddress,\n    orderCity,\n    orderZip\n  ) => {\n    const orderData = {\n      name: orderName,\n      address: orderAddress,\n      city: orderCity,\n      zip: orderZip,\n      //items: orderItems,\n      totalAmount: totalAmount,\n    };\n    sendTaskRequest(\n      {\n        url: \"https://reacthttp-21417-default-rtdb.firebaseio.com/orders.json\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: {\n          orderData,\n        },\n      },\n      createOrder.bind(null, orderData)\n    );\n    setConfirmedOrder(true);\n  };\n  let itemArray = cartCtx.items.map((item) => [item.name, item.amount]);\n  let itemList = {};\n\n  for (var i = 0; i < itemArray.length; ++i) {\n    let itemName = itemArray[i][0];\n\n    let itemAmount = itemArray[i][1];\n    let item = itemName + \"x\" + itemAmount;\n    console.log(item);\n    itemList = Object.assign(itemList, item);\n  }\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={openCheckoutHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n  return (\n    <Modal onClose={props.onClose}>\n      {orderConfirmed && (\n        <div className={classes.actions}>\n          <h1>Thank you for your order!</h1>\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n            Close\n          </button>\n        </div>\n      )}\n      {!orderConfirmed && (\n        <div>\n          {cartItems}\n          <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n          </div>\n          {isCheckout && (\n            <Checkout\n              onConfirm={confirmedOrderHandler}\n              onCancel={closeCheckoutHandler}\n            />\n          )}\n          {!isCheckout && modalActions}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}