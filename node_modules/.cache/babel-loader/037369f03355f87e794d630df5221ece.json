{"ast":null,"code":"import _slicedToArray from\"C:/Users/feli_/OneDrive/Documents/GitHub/food-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useReducer}from\"react\";var initialInputState={value:\"\",isTouched:false};var inputStateReducer=function inputStateReducer(state,action){if(action.type===\"INPUT\"){return{value:action.value,isTouched:state.isTouched};}if(action.type===\"BLUR\"){return{isTouched:true,value:state.value};}if(action.type===\"RESET\"){return{isTouched:false,value:\"\"};}return inputStateReducer;};var useInput=function useInput(validateValue){var _useReducer=useReducer(inputStateReducer,initialInputState),_useReducer2=_slicedToArray(_useReducer,2),inputState=_useReducer2[0],dispatch=_useReducer2[1];//   const [enteredValue, setEnteredValue] = useState(\"\");\n//   const [isTouched, setIsTouched] = useState(false);\n// const valueIsValid = validateValue(enteredValue);\nvar valueIsValid=validateValue(inputState.value);//const hasError = !valueIsValid && isTouched;\nvar hasError=!valueIsValid&&inputState.isTouched;var valueChangeHandler=function valueChangeHandler(event){dispatch({type:\"INPUT\",value:event.target.value});//setEnteredValue(event.target.value);\n};var inputBlurHandler=function inputBlurHandler(){dispatch({type:\"BLUR\"});//setIsTouched(true);\n};var reset=function reset(){dispatch({type:\"RESET\"});// setEnteredValue(\"\");\n// setIsTouched(false);\n};return{//value: enteredValue,\nvalue:inputState.value,hasError:hasError,valueIsValid:valueIsValid,valueChangeHandler:valueChangeHandler,inputBlurHandler:inputBlurHandler,reset:reset};};export default useInput;","map":{"version":3,"sources":["C:/Users/feli_/OneDrive/Documents/GitHub/food-app/src/hooks/use-input.js"],"names":["useState","useReducer","initialInputState","value","isTouched","inputStateReducer","state","action","type","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset"],"mappings":"wKAAA,OAASA,QAAT,CAAmBC,UAAnB,KAAqC,OAArC,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,CACxBC,KAAK,CAAE,EADiB,CAExBC,SAAS,CAAE,KAFa,CAA1B,CAKA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC3C,GAAIA,MAAM,CAACC,IAAP,GAAgB,OAApB,CAA6B,CAC3B,MAAO,CAAEL,KAAK,CAAEI,MAAM,CAACJ,KAAhB,CAAuBC,SAAS,CAAEE,KAAK,CAACF,SAAxC,CAAP,CACD,CACD,GAAIG,MAAM,CAACC,IAAP,GAAgB,MAApB,CAA4B,CAC1B,MAAO,CAAEJ,SAAS,CAAE,IAAb,CAAmBD,KAAK,CAAEG,KAAK,CAACH,KAAhC,CAAP,CACD,CACD,GAAII,MAAM,CAACC,IAAP,GAAgB,OAApB,CAA6B,CAC3B,MAAO,CAAEJ,SAAS,CAAE,KAAb,CAAoBD,KAAK,CAAE,EAA3B,CAAP,CACD,CACD,MAAOE,CAAAA,iBAAP,CACD,CAXD,CAYA,GAAMI,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,aAAD,CAAmB,CAClC,gBAA+BT,UAAU,CACvCI,iBADuC,CAEvCH,iBAFuC,CAAzC,4CAAOS,UAAP,iBAAmBC,QAAnB,iBAIA;AACA;AAEA;AACA,GAAMC,CAAAA,YAAY,CAAGH,aAAa,CAACC,UAAU,CAACR,KAAZ,CAAlC,CACA;AACA,GAAMW,CAAAA,QAAQ,CAAG,CAACD,YAAD,EAAiBF,UAAU,CAACP,SAA7C,CAEA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpCJ,QAAQ,CAAC,CAAEJ,IAAI,CAAE,OAAR,CAAiBL,KAAK,CAAEa,KAAK,CAACC,MAAN,CAAad,KAArC,CAAD,CAAR,CACA;AACD,CAHD,CAKA,GAAMe,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7BN,QAAQ,CAAC,CAAEJ,IAAI,CAAE,MAAR,CAAD,CAAR,CACA;AACD,CAHD,CAKA,GAAMW,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClBP,QAAQ,CAAC,CAAEJ,IAAI,CAAE,OAAR,CAAD,CAAR,CACA;AACA;AACD,CAJD,CAKA,MAAO,CACL;AACAL,KAAK,CAAEQ,UAAU,CAACR,KAFb,CAGLW,QAAQ,CAARA,QAHK,CAILD,YAAY,CAAZA,YAJK,CAKLE,kBAAkB,CAAlBA,kBALK,CAMLG,gBAAgB,CAAhBA,gBANK,CAOLC,KAAK,CAALA,KAPK,CAAP,CASD,CArCD,CAuCA,cAAeV,CAAAA,QAAf","sourcesContent":["import { useState, useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  if (action.type === \"INPUT\") {\r\n    return { value: action.value, isTouched: state.isTouched };\r\n  }\r\n  if (action.type === \"BLUR\") {\r\n    return { isTouched: true, value: state.value };\r\n  }\r\n  if (action.type === \"RESET\") {\r\n    return { isTouched: false, value: \"\" };\r\n  }\r\n  return inputStateReducer;\r\n};\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(\r\n    inputStateReducer,\r\n    initialInputState\r\n  );\r\n  //   const [enteredValue, setEnteredValue] = useState(\"\");\r\n  //   const [isTouched, setIsTouched] = useState(false);\r\n\r\n  // const valueIsValid = validateValue(enteredValue);\r\n  const valueIsValid = validateValue(inputState.value);\r\n  //const hasError = !valueIsValid && isTouched;\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n    //setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    dispatch({ type: \"BLUR\" });\r\n    //setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatch({ type: \"RESET\" });\r\n    // setEnteredValue(\"\");\r\n    // setIsTouched(false);\r\n  };\r\n  return {\r\n    //value: enteredValue,\r\n    value: inputState.value,\r\n    hasError,\r\n    valueIsValid,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}