{"ast":null,"code":"import _slicedToArray from\"C:/Users/feli_/OneDrive/Documents/GitHub/food-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useContext,useState}from\"react\";import Modal from\"../UI/Modal\";import CartItem from\"./CartItem\";import classes from\"./Cart.module.css\";import CartContext from\"../../store/cart-context\";import Checkout from\"./Checkout\";import useHttp from\"../../hooks/use-http\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Cart=function Cart(props){var _useHttp=useHttp(),isLoading=_useHttp.isLoading,error=_useHttp.error,sendTaskRequest=_useHttp.sendRequest;var createOrder=function createOrder(taskText,orderData){var generatedId=orderData.name;// firebase-specific => \"name\" contains generated id\nvar createdOrder={id:generatedId,name:orderData.name,address:orderData.address,city:orderData.city,zip:orderData.zip,items:orderData.items,totalAmount:totalAmount};props.onAddTask(createdOrder);};var cartCtx=useContext(CartContext);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isCheckout=_useState2[0],setIsCheckout=_useState2[1];var totalAmount=\"$\".concat(cartCtx.totalAmount.toFixed(2));var hasItems=cartCtx.items.length>0;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),orderConfirmed=_useState4[0],setConfirmedOrder=_useState4[1];var cartItemRemoveHandler=function cartItemRemoveHandler(id){cartCtx.removeItem(id);};var cartItemAddHandler=function cartItemAddHandler(item){cartCtx.addItem(item);};var openCheckoutHandler=function openCheckoutHandler(){setIsCheckout(true);};var closeCheckoutHandler=function closeCheckoutHandler(){setIsCheckout(false);};var confirmedOrderHandler=function confirmedOrderHandler(orderName,orderAddress,orderCity,orderZip){var orderData={name:orderName,address:orderAddress,city:orderCity,zip:orderZip,items:itemList,totalAmount:totalAmount};sendTaskRequest({url:\"https://reacthttp-21417-default-rtdb.firebaseio.com/orders.json\",method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:{orderData:orderData}},createOrder.bind(null,orderData));setConfirmedOrder(true);};var itemArray=cartCtx.items.map(function(item){return[item.name,item.amount];});var itemList=[];for(var i=0;i<itemArray.length;++i){var itemName=itemArray[i][0];var itemAmount=itemArray[i][1];var item=itemName+\" x\"+itemAmount;itemList.push({item:item});}console.log(itemList);var cartItems=/*#__PURE__*/_jsx(\"ul\",{className:classes[\"cart-items\"],children:cartCtx.items.map(function(item){return/*#__PURE__*/_jsx(CartItem,{name:item.name,amount:item.amount,price:item.price,onRemove:cartItemRemoveHandler.bind(null,item.id),onAdd:cartItemAddHandler.bind(null,item)},item.id);})});var modalActions=/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes[\"button--alt\"],onClick:props.onClose,children:\"Close\"}),hasItems&&/*#__PURE__*/_jsx(\"button\",{className:classes.button,onClick:openCheckoutHandler,children:\"Order\"})]});return/*#__PURE__*/_jsxs(Modal,{onClose:props.onClose,children:[orderConfirmed&&/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Thank you for your order!\"}),/*#__PURE__*/_jsx(\"button\",{className:classes[\"button--alt\"],onClick:props.onClose,children:\"Close\"})]}),!orderConfirmed&&/*#__PURE__*/_jsxs(\"div\",{children:[cartItems,/*#__PURE__*/_jsxs(\"div\",{className:classes.total,children:[/*#__PURE__*/_jsx(\"span\",{children:\"Total Amount\"}),/*#__PURE__*/_jsx(\"span\",{children:totalAmount})]}),isCheckout&&/*#__PURE__*/_jsx(Checkout,{onConfirm:confirmedOrderHandler,onCancel:closeCheckoutHandler}),!isCheckout&&modalActions]})]});};export default Cart;","map":{"version":3,"sources":["C:/Users/feli_/OneDrive/Documents/GitHub/food-app/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","useHttp","Cart","props","isLoading","error","sendTaskRequest","sendRequest","createOrder","taskText","orderData","generatedId","name","createdOrder","id","address","city","zip","items","totalAmount","onAddTask","cartCtx","isCheckout","setIsCheckout","toFixed","hasItems","length","orderConfirmed","setConfirmedOrder","cartItemRemoveHandler","removeItem","cartItemAddHandler","item","addItem","openCheckoutHandler","closeCheckoutHandler","confirmedOrderHandler","orderName","orderAddress","orderCity","orderZip","itemList","url","method","headers","body","bind","itemArray","map","amount","i","itemName","itemAmount","push","console","log","cartItems","price","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\n\nimport Modal from \"../UI/Modal\";\nimport CartItem from \"./CartItem\";\nimport classes from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport Checkout from \"./Checkout\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst Cart = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createOrder = (taskText, orderData) => {\n    const generatedId = orderData.name; // firebase-specific => \"name\" contains generated id\n    const createdOrder = {\n      id: generatedId,\n      name: orderData.name,\n      address: orderData.address,\n      city: orderData.city,\n      zip: orderData.zip,\n      items: orderData.items,\n      totalAmount: totalAmount,\n    };\n    props.onAddTask(createdOrder);\n  };\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n  const [orderConfirmed, setConfirmedOrder] = useState(false);\n\n  const cartItemRemoveHandler = (id) => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartCtx.addItem(item);\n  };\n  const openCheckoutHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const closeCheckoutHandler = () => {\n    setIsCheckout(false);\n  };\n\n  const confirmedOrderHandler = (\n    orderName,\n    orderAddress,\n    orderCity,\n    orderZip\n  ) => {\n    const orderData = {\n      name: orderName,\n      address: orderAddress,\n      city: orderCity,\n      zip: orderZip,\n      items: itemList,\n      totalAmount: totalAmount,\n    };\n    sendTaskRequest(\n      {\n        url: \"https://reacthttp-21417-default-rtdb.firebaseio.com/orders.json\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: {\n          orderData,\n        },\n      },\n      createOrder.bind(null, orderData)\n    );\n    setConfirmedOrder(true);\n  };\n  let itemArray = cartCtx.items.map((item) => [item.name, item.amount]);\n  let itemList = [];\n\n  for (var i = 0; i < itemArray.length; ++i) {\n    let itemName = itemArray[i][0];\n    let itemAmount = itemArray[i][1];\n    let item = itemName + \" x\" + itemAmount;\n    itemList.push({\n      item,\n    });\n  }\n  console.log(itemList);\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem\n          key={item.id}\n          name={item.name}\n          amount={item.amount}\n          price={item.price}\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\n          onAdd={cartItemAddHandler.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={openCheckoutHandler}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n  return (\n    <Modal onClose={props.onClose}>\n      {orderConfirmed && (\n        <div className={classes.actions}>\n          <h1>Thank you for your order!</h1>\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\n            Close\n          </button>\n        </div>\n      )}\n      {!orderConfirmed && (\n        <div>\n          {cartItems}\n          <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n          </div>\n          {isCheckout && (\n            <Checkout\n              onConfirm={confirmedOrderHandler}\n              onCancel={closeCheckoutHandler}\n            />\n          )}\n          {!isCheckout && modalActions}\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}