{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/feli_/OneDrive/Documents/GitHub/food-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/feli_/OneDrive/Documents/GitHub/food-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/feli_/OneDrive/Documents/GitHub/food-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useCallback}from\"react\";var useHttp=function useHttp(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var sendRequest=useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(requestConfig,applyData){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(null);_context.prev=2;_context.next=5;return fetch(requestConfig.url,{method:requestConfig.method?requestConfig.method:\"GET\",headers:requestConfig.headers?requestConfig.headers:{},body:requestConfig.body?JSON.stringify(requestConfig.body):null});case 5:response=_context.sent;if(response.ok){_context.next=8;break;}throw new Error(\"Request failed!\");case 8:_context.next=10;return response.json();case 10:data=_context.sent;applyData(data);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);setError(_context.t0.message||\"Something went wrong!\");case 17:setIsLoading(false);case 18:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}(),[]);return{isLoading:isLoading,error:error,sendRequest:sendRequest};};export default useHttp;","map":{"version":3,"sources":["C:/Users/feli_/OneDrive/Documents/GitHub/food-app/src/hooks/use-http.js"],"names":["useState","useCallback","useHttp","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","applyData","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message"],"mappings":"qfAAA,OAASA,QAAT,CAAmBC,WAAnB,KAAsC,OAAtC,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB,cAAkCF,QAAQ,CAAC,KAAD,CAA1C,wCAAOG,SAAP,eAAkBC,YAAlB,eACA,eAA0BJ,QAAQ,CAAC,IAAD,CAAlC,yCAAOK,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,WAAW,CAAGN,WAAW,0FAAC,iBAAOO,aAAP,CAAsBC,SAAtB,oIAC9BL,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CAF8B,sCAILI,CAAAA,KAAK,CAACF,aAAa,CAACG,GAAf,CAAoB,CAC9CC,MAAM,CAAEJ,aAAa,CAACI,MAAd,CAAuBJ,aAAa,CAACI,MAArC,CAA8C,KADR,CAE9CC,OAAO,CAAEL,aAAa,CAACK,OAAd,CAAwBL,aAAa,CAACK,OAAtC,CAAgD,EAFX,CAG9CC,IAAI,CAAEN,aAAa,CAACM,IAAd,CAAqBC,IAAI,CAACC,SAAL,CAAeR,aAAa,CAACM,IAA7B,CAArB,CAA0D,IAHlB,CAApB,CAJA,QAItBG,QAJsB,kBAUvBA,QAAQ,CAACC,EAVc,8BAWpB,IAAIC,CAAAA,KAAJ,CAAU,iBAAV,CAXoB,+BAcTF,CAAAA,QAAQ,CAACG,IAAT,EAdS,SActBC,IAdsB,eAe5BZ,SAAS,CAACY,IAAD,CAAT,CAf4B,iFAiB5Bf,QAAQ,CAAC,YAAIgB,OAAJ,EAAe,uBAAhB,CAAR,CAjB4B,QAmB9BlB,YAAY,CAAC,KAAD,CAAZ,CAnB8B,qEAAD,mEAoB5B,EApB4B,CAA/B,CAsBA,MAAO,CACLD,SAAS,CAATA,SADK,CAELE,KAAK,CAALA,KAFK,CAGLE,WAAW,CAAXA,WAHK,CAAP,CAKD,CA/BD,CAiCA,cAAeL,CAAAA,OAAf","sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequest = useCallback(async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(requestConfig.url, {\r\n        method: requestConfig.method ? requestConfig.method : \"GET\",\r\n        headers: requestConfig.headers ? requestConfig.headers : {},\r\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Request failed!\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n    } catch (err) {\r\n      setError(err.message || \"Something went wrong!\");\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"]},"metadata":{},"sourceType":"module"}